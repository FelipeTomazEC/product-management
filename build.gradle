plugins {
	id 'java'
	id 'groovy'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.github.felipetomazec'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
	groovy_bom_version = "4.0.5"
	rest_assured_version = "5.4.0"
	spock_bom_version = "2.4-M1-groovy-4.0"
}

repositories {
	mavenCentral()
}

sourceSets {
	"integration-test" {
		java.srcDirs = ['src/integration-test/groovy']
		resources.srcDirs = ['src/integration-test/groovy']
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.register("integrationTest", Test) {
	group = 'verification'
	description = 'Runs integration tests'
	testClassesDirs = integrationTestSourceSet.output.classesDirs
	classpath = integrationTestSourceSet.runtimeClasspath
	useJUnitPlatform()

	doFirst {
		print "Running ${project.name} integration tests."
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Configure Spock Framework
	testImplementation platform("org.apache.groovy:groovy-bom:${groovy_bom_version}")
	testImplementation 'org.apache.groovy:groovy'
	testImplementation platform("org.spockframework:spock-bom:${spock_bom_version}")
	testImplementation 'org.spockframework:spock-core'

	// Integration test dependencies
	integrationTestImplementation 'org.spockframework:spock-spring'
	integrationTestImplementation "io.rest-assured:rest-assured:${rest_assured_version}"
}

tasks.named('test') {
	useJUnitPlatform()
}